using System;
using System.Xml.Serialization;
using System.IO;
using System.Xml;
using System.Globalization;


namespace CASerialization
{

    class Program
    {
        static void Main(string[] args)
        {
            Console.Clear();
            var e1 = new Employee
            {
                Id = 1001,
                Fname = "Abanoub",
                Lname = "A",
                Benefites = { "pension", "Health Insurance" }
            };
            var xmlContent = SerializeToXmlString(e1);
            Console.WriteLine(xmlContent);
            File.WriteAllText("xmlDocument.xml", xmlContent);

            Employee e2 = DeserializeFromXmlString(xmlContent);
            Console.WriteLine(e2);  
            Console.ReadKey();

        }

        private static string SerializeToXmlString(Employee e1)
        {
            var result = "";
            var xmlSerializer = new XmlSerializer(e1.GetType());
            using (var sw = new StringWriter())
            {
                using (var writer = XmlWriter.Create(sw, new XmlWriterSettings { Indent = true }))
                {

                    xmlSerializer.Serialize(writer, e1);
                    result = sw.ToString();

                }

            }
                return result;     
        }
        private static Employee DeserializeFromXmlString(string xmlContent)
        {
            Employee employee = null;
            var xmlSerializer = new XmlSerializer(typeof(Employee));
            using (TextReader reader = new StringReader(xmlContent))
            {
                employee = xmlSerializer.Deserialize(reader) as Employee;
            }
            return employee; 
        }
        
        
        
        }
    
      public class Employee
        {

            public int Id { get; set; }
            public string Fname { get; set; }
            public string Lname { get; set; }
            public List<String> Benefites { get; set; } = new List<String>();

        public override string ToString()
        {
            return $"{Id} \n {Fname} {Lname} Benefits {Benefites} ";
        }
    }
}   
